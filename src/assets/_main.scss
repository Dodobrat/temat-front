@include scrollbar();

* {
	@include scrollbar();
}

@import "../../node_modules/react-toastify/scss/main.scss";
@import "toast";
@import "forms";

svg {
	fill: currentColor;
}

.dui__btn {
	svg {
		font-size: 1.25em;
	}
}

.dui__admin {
	&__sidebar {
		&__item {
			&__main {
				p > svg {
					font-size: 1.25em;
					transform: translateY(0.1em);
				}
			}
			&::before {
				transition: $normalTrans;
				content: "";
				position: absolute;
				top: 0;
				left: 0;
				bottom: 0;
				width: 100%;
				background-color: darken($sidebarBg, 5%);
				pointer-events: none;
				transform: translateX(-100%);
				z-index: 0;
			}
			&.active {
				&::before {
					transform: translateX(0);
				}
				&:hover {
					background-color: darken($sidebarBg, 7.5%);
				}
			}
		}
	}
}

.temat__table {
	&__search {
		max-width: 15rem;
		width: 100%;
	}
	&__sizes__select {
		min-width: 7.5rem;
	}
	&__img {
		padding: 0;
		flex: 0 0 3rem;
		height: 3rem;
	}
	&__contact {
		svg {
			transform: translateY(0.2em);
		}
	}
	&__product__details {
		svg {
			transform: translateY(0.15em);
			&.rotate-90 {
				transform: rotate(90deg) translateX(0.15em);
			}
		}
	}
}
.dui__badge {
	svg {
		transform: translateY(0.15em);
	}
}

.temat__avatar {
	border-radius: $smBorderRadius;
	overflow: hidden;
	background-color: $secondaryBg;
	display: grid;
	align-items: center;
	justify-content: center;
	position: relative;
	width: 100%;
	height: 100%;
	&__img {
		width: 100%;
		height: 100%;
		object-fit: cover;
	}
	&__fallback {
		width: 1.5em;
		height: 1.5em;
		color: $secondaryFont;
		opacity: 0.75;
	}
}

.temat__card__stack {
	max-width: 100%;
	& > * {
		border-radius: 0;
		&:first-child {
			border-radius: $smBorderRadius $smBorderRadius 0 0;
		}
		&:last-child {
			border-radius: 0 0 $smBorderRadius $smBorderRadius;
		}
	}
}

.temat__form__collapse {
	box-shadow: 0 0 0 0.0625rem rgba($subFont, 0.25);
	&__content {
		box-shadow: inset 0 0.0625rem 0 0 rgba($subFont, 0.25);
	}
}

.dui__back-top.dui__back-top--bottom-right {
	bottom: 3rem;
	right: 1rem;
}

.ellipsis {
	white-space: nowrap;
	text-overflow: ellipsis;
	overflow: hidden;
}

.rotate-90 {
	transform: rotate(90deg);
}

.text--right {
	text-align: right;
}

@each $breakpointName, $breakpointSize in $breakpoints {
	.text--#{$breakpointName}--right {
		@media all and (min-width: $breakpointSize) {
			text-align: right;
		}
	}
}

.text--opaque {
	opacity: 0.6;
}
